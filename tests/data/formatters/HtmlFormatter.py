"""
Autogenerated, do not edit manually!

"""
import sys


RESULTS = {
    '0_vs_0': {
        'result': '<div class="dif-body"><div>  <span class="dif-vU">0</span></div></div>',
    },
    '0_vs_0_noU': {
        'result': '<div class="dif-body"></div>',
    },
    '0_vs_1': {
        'result': '<div class="dif-body"><div>- <span class="dif-vO">0</span></div><div>+ <span class="dif-vN">1</span></div></div>',
    },
    '0_vs_empty_string': {
        'result': '<div class="dif-body"><div>- <span class="dif-vO">0</span></div><div>+ <span class="dif-vN">&#x27;&#x27;</span></div></div>',
    },
    '0_vs_undef': {
        'result': '<div class="dif-body"><div>- <span class="dif-vO">0</span></div><div>+ <span class="dif-vN">None</span></div></div>',
    },
    '1.0_vs_1.0_as_string': {
        'result': '<div class="dif-body"><div>- <span class="dif-vO">1</span></div><div>+ <span class="dif-vN">&#x27;1.0&#x27;</span></div></div>',
    },
    '1_vs_-1': {
        'result': '<div class="dif-body"><div>- <span class="dif-vO">1</span></div><div>+ <span class="dif-vN">-1</span></div></div>',
    },
    '1_vs_1.0': {
        'result': '<div class="dif-body"><div>  <span class="dif-vU">1</span></div></div>',
    },
    '1_vs_1_as_string': {
        'result': '<div class="dif-body"><div>- <span class="dif-vO">1</span></div><div>+ <span class="dif-vN">&#x27;1&#x27;</span></div></div>',
    },
    'a_vs_a': {
        'result': '<div class="dif-body"><div>  <span class="dif-vU">&#x27;a&#x27;</span></div></div>',
    },
    'a_vs_b': {
        'result': '<div class="dif-body"><div>- <span class="dif-vO">&#x27;a&#x27;</span></div><div>+ <span class="dif-vN">&#x27;b&#x27;</span></div></div>',
    },
    'absent_emitter': {
        'raises': NotImplementedError,
    },
    'brackets': {
        'result': '<div class="dif-body"><div>  <span class="dif-kO">{&#x27;(&#x27;}</span></div><div>-   <span class="dif-vO">&#x27;)&#x27;</span></div><div>+   <span class="dif-vN">&#x27;(&#x27;</span></div><div>  <span class="dif-kO">{&#x27;&lt;&#x27;}</span></div><div>-   <span class="dif-vO">&#x27;&gt;&#x27;</span></div><div>+   <span class="dif-vN">&#x27;&lt;&#x27;</span></div><div>  <span class="dif-kO">{&#x27;[&#x27;}</span></div><div>-   <span class="dif-vO">&#x27;]&#x27;</span></div><div>+   <span class="dif-vN">&#x27;[&#x27;</span></div><div>  <span class="dif-kO">{&#x27;{&#x27;}</span></div><div>-   <span class="dif-vO">&#x27;}&#x27;</span></div><div>+   <span class="dif-vN">&#x27;{&#x27;</span></div></div>',
    },
    'deeply_nested_hash_vs_empty_hash': {
        'result': '<div class="dif-body"><div>- <span class="dif-kR">{&#x27;one&#x27;}</span></div><div>-   <span class="dif-vR">{&#x27;two&#x27;: {&#x27;three&#x27;: 3}}</span></div></div>',
    },
    'deeply_nested_hash_vs_empty_hash_trimR': {
        'result': '<div class="dif-body"><div>- <span class="dif-kR">{&#x27;one&#x27;}</span></div><div>-   <span class="dif-vR">None</span></div></div>',
    },
    'deeply_nested_list_vs_empty_list': {
        'result': '<div class="dif-body"><div>- <span class="dif-kR">[0]</span></div><div>-   <span class="dif-vR">[[0, 1]]</span></div></div>',
    },
    'deeply_nested_list_vs_empty_list_trimR': {
        'result': '<div class="dif-body"><div>- <span class="dif-kR">[0]</span></div><div>-   <span class="dif-vR">None</span></div></div>',
    },
    'deeply_nested_subhash_removed_from_hash': {
        'result': '<div class="dif-body"><div>  <span class="dif-kU">{&#x27;four&#x27;}</span></div><div>    <span class="dif-vU">4</span></div><div>- <span class="dif-kR">{&#x27;one&#x27;}</span></div><div>-   <span class="dif-vR">{&#x27;two&#x27;: {&#x27;three&#x27;: 3}}</span></div></div>',
    },
    'deeply_nested_subhash_removed_from_hash_trimR': {
        'result': '<div class="dif-body"><div>  <span class="dif-kU">{&#x27;four&#x27;}</span></div><div>    <span class="dif-vU">4</span></div><div>- <span class="dif-kR">{&#x27;one&#x27;}</span></div><div>-   <span class="dif-vR">None</span></div></div>',
    },
    'deeply_nested_sublist_removed_from_list': {
        'result': '<div class="dif-body"><div>  <span class="dif-kU">[0]</span></div><div>    <span class="dif-vU">0</span></div><div>- <span class="dif-kR">[1]</span></div><div>-   <span class="dif-vR">[[0, 1]]</span></div></div>',
    },
    'deeply_nested_sublist_removed_from_list_trimR': {
        'result': '<div class="dif-body"><div>  <span class="dif-kU">[0]</span></div><div>    <span class="dif-vU">0</span></div><div>- <span class="dif-kR">[1]</span></div><div>-   <span class="dif-vR">None</span></div></div>',
    },
    'empty_hash_vs_empty_hash': {
        'result': '<div class="dif-body"><div>  <span class="dif-vU">{}</span></div></div>',
    },
    'empty_hash_vs_empty_hash_noU': {
        'result': '<div class="dif-body"></div>',
    },
    'empty_hash_vs_empty_list': {
        'result': '<div class="dif-body"><div>- <span class="dif-vO">{}</span></div><div>+ <span class="dif-vN">[]</span></div></div>',
    },
    'empty_hash_vs_hash_with_one_key': {
        'result': '<div class="dif-body"><div>+ <span class="dif-kA">{&#x27;one&#x27;}</span></div><div>+   <span class="dif-vA">1</span></div></div>',
    },
    'empty_hash_vs_hash_with_one_key_noA': {
        'result': '<div class="dif-body"></div>',
    },
    'empty_list_vs_deeply_nested_list': {
        'result': '<div class="dif-body"><div>+ <span class="dif-kA">[0]</span></div><div>+   <span class="dif-vA">[[0, 1]]</span></div></div>',
    },
    'empty_list_vs_empty_hash': {
        'result': '<div class="dif-body"><div>- <span class="dif-vO">[]</span></div><div>+ <span class="dif-vN">{}</span></div></div>',
    },
    'empty_list_vs_empty_list': {
        'result': '<div class="dif-body"><div>  <span class="dif-vU">[]</span></div></div>',
    },
    'empty_list_vs_empty_list_noU': {
        'result': '<div class="dif-body"></div>',
    },
    'empty_list_vs_list_with_one_item': {
        'result': '<div class="dif-body"><div>+ <span class="dif-kA">[0]</span></div><div>+   <span class="dif-vA">0</span></div></div>',
    },
    'empty_list_vs_list_with_one_item_noA': {
        'result': '<div class="dif-body"></div>',
    },
    'empty_string_vs_0': {
        'result': '<div class="dif-body"><div>- <span class="dif-vO">&#x27;&#x27;</span></div><div>+ <span class="dif-vN">0</span></div></div>',
    },
    'empty_string_vs_text': {
        'result': '<div class="dif-body"><div># <span class="dif-kE">&lt;str&gt;</span></div><div>  <span class="dif-kX0-0">@@ -1 +1,2 @@</span></div><div>- <span class="dif-vR"></span></div><div>+ <span class="dif-vA">A</span></div><div>+ <span class="dif-vA">B</span></div></div>',
    },
    'empty_string_vs_undef': {
        'result': '<div class="dif-body"><div>- <span class="dif-vO">&#x27;&#x27;</span></div><div>+ <span class="dif-vN">None</span></div></div>',
    },
    'escaped_symbols': {
        'result': '<div class="dif-body"><div>  <span class="dif-kO">{&#x27;\\n&#x27;}</span></div><div>-   <span class="dif-vO">&#x27;\\r\\n&#x27;</span></div><div>+   <span class="dif-vN">&#x27;\\n&#x27;</span></div></div>',
    },
    'frozenset_extended': {
        'result': '<div class="dif-body"><div># <span class="dif-kE">&lt;frozenset&gt;</span></div><div>  <span class="dif-vU">1</span></div><div>+ <span class="dif-vA">2</span></div></div>',
    },
    'frozensets_lcs': {
        'result': '<div class="dif-body"><div># <span class="dif-kE">&lt;frozenset&gt;</span></div><div>- <span class="dif-vR">1</span></div><div>  <span class="dif-vU">2</span></div><div>+ <span class="dif-vA">3</span></div></div>',
    },
    'hash_with_one_key_vs_empty_hash': {
        'result': '<div class="dif-body"><div>- <span class="dif-kR">{&#x27;one&#x27;}</span></div><div>-   <span class="dif-vR">1</span></div></div>',
    },
    'hash_with_one_key_vs_empty_hash_noR': {
        'result': '<div class="dif-body"></div>',
    },
    'hashes_with_one_different_value_noN': {
        'result': '<div class="dif-body"><div>  <span class="dif-kO">{&#x27;one&#x27;}</span></div><div>-   <span class="dif-vO">1</span></div></div>',
    },
    'hashes_with_one_different_value_noO': {
        'result': '<div class="dif-body"><div>  <span class="dif-kN">{&#x27;one&#x27;}</span></div><div>+   <span class="dif-vN">2</span></div></div>',
    },
    'line_added_to_empty_string': {
        'result': '<div class="dif-body"><div># <span class="dif-kE">&lt;str&gt;</span></div><div>  <span class="dif-kX0-0">@@ -1 +1,2 @@</span></div><div>  <span class="dif-vU"></span></div><div>+ <span class="dif-vA"></span></div></div>',
    },
    'list_with_one_item_vs_empty_list': {
        'result': '<div class="dif-body"><div>- <span class="dif-kR">[0]</span></div><div>-   <span class="dif-vR">0</span></div></div>',
    },
    'list_with_one_item_vs_empty_list_noR': {
        'result': '<div class="dif-body"></div>',
    },
    'lists_LCS_added_items': {
        'result': '<div class="dif-body"><div>+ <span class="dif-kA">[0]</span></div><div>+   <span class="dif-vA">0</span></div><div>+ <span class="dif-kA">[1]</span></div><div>+   <span class="dif-vA">1</span></div><div>  <span class="dif-kU">[2]</span></div><div>    <span class="dif-vU">2</span></div><div>  <span class="dif-kU">[3]</span></div><div>    <span class="dif-vU">3</span></div><div>+ <span class="dif-kA">[4]</span></div><div>+   <span class="dif-vA">4</span></div><div>  <span class="dif-kU">[5]</span></div><div>    <span class="dif-vU">5</span></div><div>+ <span class="dif-kA">[6]</span></div><div>+   <span class="dif-vA">6</span></div><div>+ <span class="dif-kA">[7]</span></div><div>+   <span class="dif-vA">7</span></div></div>',
    },
    'lists_LCS_added_items_noU': {
        'result': '<div class="dif-body"><div>+ <span class="dif-kA">[0]</span></div><div>+   <span class="dif-vA">0</span></div><div>+ <span class="dif-kA">[1]</span></div><div>+   <span class="dif-vA">1</span></div><div>+ <span class="dif-kA">[2]</span></div><div>+   <span class="dif-vA">4</span></div><div>+ <span class="dif-kA">[3]</span></div><div>+   <span class="dif-vA">6</span></div><div>+ <span class="dif-kA">[4]</span></div><div>+   <span class="dif-vA">7</span></div></div>',
    },
    'lists_LCS_changed_items': {
        'result': '<div class="dif-body"><div>  <span class="dif-kU">[0]</span></div><div>    <span class="dif-vU">0</span></div><div>  <span class="dif-kU">[1]</span></div><div>    <span class="dif-vU">1</span></div><div>  <span class="dif-kO">[2]</span></div><div>-   <span class="dif-vO">2</span></div><div>+   <span class="dif-vN">9</span></div><div>  <span class="dif-kO">[3]</span></div><div>-   <span class="dif-vO">3</span></div><div>+   <span class="dif-vN">9</span></div><div>  <span class="dif-kU">[4]</span></div><div>    <span class="dif-vU">4</span></div><div>  <span class="dif-kO">[5]</span></div><div>-   <span class="dif-vO">5</span></div><div>+   <span class="dif-vN">9</span></div><div>  <span class="dif-kU">[6]</span></div><div>    <span class="dif-vU">6</span></div><div>  <span class="dif-kU">[7]</span></div><div>    <span class="dif-vU">7</span></div></div>',
    },
    'lists_LCS_changed_items_noOU': {
        'result': '<div class="dif-body"><div>  <span class="dif-kN">[2]</span></div><div>+   <span class="dif-vN">9</span></div><div>  <span class="dif-kN">[3]</span></div><div>+   <span class="dif-vN">9</span></div><div>  <span class="dif-kN">[5]</span></div><div>+   <span class="dif-vN">9</span></div></div>',
    },
    'lists_LCS_changed_items_noU': {
        'result': '<div class="dif-body"><div>  <span class="dif-kO">[2]</span></div><div>-   <span class="dif-vO">2</span></div><div>+   <span class="dif-vN">9</span></div><div>  <span class="dif-kO">[3]</span></div><div>-   <span class="dif-vO">3</span></div><div>+   <span class="dif-vN">9</span></div><div>  <span class="dif-kO">[5]</span></div><div>-   <span class="dif-vO">5</span></div><div>+   <span class="dif-vN">9</span></div></div>',
    },
    'lists_LCS_complex': {
        'result': '<div class="dif-body"><div>- <span class="dif-kR">[0]</span></div><div>-   <span class="dif-vR">&#x27;a&#x27;</span></div><div>  <span class="dif-kU">[1]</span></div><div>    <span class="dif-vU">&#x27;b&#x27;</span></div><div>  <span class="dif-kU">[2]</span></div><div>    <span class="dif-vU">&#x27;c&#x27;</span></div><div>+ <span class="dif-kA">[3]</span></div><div>+   <span class="dif-vA">&#x27;d&#x27;</span></div><div>  <span class="dif-kU">[4]</span></div><div>    <span class="dif-vU">&#x27;e&#x27;</span></div><div>  <span class="dif-kO">[5]</span></div><div>-   <span class="dif-vO">&#x27;h&#x27;</span></div><div>+   <span class="dif-vN">&#x27;f&#x27;</span></div><div>  <span class="dif-kU">[6]</span></div><div>    <span class="dif-vU">&#x27;j&#x27;</span></div><div>+ <span class="dif-kA">[7]</span></div><div>+   <span class="dif-vA">&#x27;k&#x27;</span></div><div>  <span class="dif-kU">[8]</span></div><div>    <span class="dif-vU">&#x27;l&#x27;</span></div><div>  <span class="dif-kU">[9]</span></div><div>    <span class="dif-vU">&#x27;m&#x27;</span></div><div>  <span class="dif-kO">[10]</span></div><div>-   <span class="dif-vO">&#x27;n&#x27;</span></div><div>+   <span class="dif-vN">&#x27;r&#x27;</span></div><div>  <span class="dif-kO">[11]</span></div><div>-   <span class="dif-vO">&#x27;p&#x27;</span></div><div>+   <span class="dif-vN">&#x27;s&#x27;</span></div><div>+ <span class="dif-kA">[12]</span></div><div>+   <span class="dif-vA">&#x27;t&#x27;</span></div></div>',
    },
    'lists_LCS_complex_noAU': {
        'result': '<div class="dif-body"><div>- <span class="dif-kR">[0]</span></div><div>-   <span class="dif-vR">&#x27;a&#x27;</span></div><div>  <span class="dif-kO">[4]</span></div><div>-   <span class="dif-vO">&#x27;h&#x27;</span></div><div>+   <span class="dif-vN">&#x27;f&#x27;</span></div><div>  <span class="dif-kO">[8]</span></div><div>-   <span class="dif-vO">&#x27;n&#x27;</span></div><div>+   <span class="dif-vN">&#x27;r&#x27;</span></div><div>  <span class="dif-kO">[9]</span></div><div>-   <span class="dif-vO">&#x27;p&#x27;</span></div><div>+   <span class="dif-vN">&#x27;s&#x27;</span></div></div>',
    },
    'lists_LCS_complex_noRU': {
        'result': '<div class="dif-body"><div>+ <span class="dif-kA">[3]</span></div><div>+   <span class="dif-vA">&#x27;d&#x27;</span></div><div>  <span class="dif-kO">[4]</span></div><div>-   <span class="dif-vO">&#x27;h&#x27;</span></div><div>+   <span class="dif-vN">&#x27;f&#x27;</span></div><div>+ <span class="dif-kA">[6]</span></div><div>+   <span class="dif-vA">&#x27;k&#x27;</span></div><div>  <span class="dif-kO">[8]</span></div><div>-   <span class="dif-vO">&#x27;n&#x27;</span></div><div>+   <span class="dif-vN">&#x27;r&#x27;</span></div><div>  <span class="dif-kO">[9]</span></div><div>-   <span class="dif-vO">&#x27;p&#x27;</span></div><div>+   <span class="dif-vN">&#x27;s&#x27;</span></div><div>+ <span class="dif-kA">[10]</span></div><div>+   <span class="dif-vA">&#x27;t&#x27;</span></div></div>',
    },
    'lists_LCS_complex_noU': {
        'result': '<div class="dif-body"><div>- <span class="dif-kR">[0]</span></div><div>-   <span class="dif-vR">&#x27;a&#x27;</span></div><div>+ <span class="dif-kA">[3]</span></div><div>+   <span class="dif-vA">&#x27;d&#x27;</span></div><div>  <span class="dif-kO">[4]</span></div><div>-   <span class="dif-vO">&#x27;h&#x27;</span></div><div>+   <span class="dif-vN">&#x27;f&#x27;</span></div><div>+ <span class="dif-kA">[6]</span></div><div>+   <span class="dif-vA">&#x27;k&#x27;</span></div><div>  <span class="dif-kO">[8]</span></div><div>-   <span class="dif-vO">&#x27;n&#x27;</span></div><div>+   <span class="dif-vN">&#x27;r&#x27;</span></div><div>  <span class="dif-kO">[9]</span></div><div>-   <span class="dif-vO">&#x27;p&#x27;</span></div><div>+   <span class="dif-vN">&#x27;s&#x27;</span></div><div>+ <span class="dif-kA">[10]</span></div><div>+   <span class="dif-vA">&#x27;t&#x27;</span></div></div>',
    },
    'lists_LCS_complex_onlyU': {
        'result': '<div class="dif-body"><div>  <span class="dif-kU">[1]</span></div><div>    <span class="dif-vU">&#x27;b&#x27;</span></div><div>  <span class="dif-kU">[2]</span></div><div>    <span class="dif-vU">&#x27;c&#x27;</span></div><div>  <span class="dif-kU">[3]</span></div><div>    <span class="dif-vU">&#x27;e&#x27;</span></div><div>  <span class="dif-kU">[5]</span></div><div>    <span class="dif-vU">&#x27;j&#x27;</span></div><div>  <span class="dif-kU">[6]</span></div><div>    <span class="dif-vU">&#x27;l&#x27;</span></div><div>  <span class="dif-kU">[7]</span></div><div>    <span class="dif-vU">&#x27;m&#x27;</span></div></div>',
    },
    'lists_LCS_removed_items': {
        'result': '<div class="dif-body"><div>- <span class="dif-kR">[0]</span></div><div>-   <span class="dif-vR">0</span></div><div>- <span class="dif-kR">[1]</span></div><div>-   <span class="dif-vR">1</span></div><div>  <span class="dif-kU">[2]</span></div><div>    <span class="dif-vU">2</span></div><div>  <span class="dif-kU">[3]</span></div><div>    <span class="dif-vU">3</span></div><div>- <span class="dif-kR">[4]</span></div><div>-   <span class="dif-vR">4</span></div><div>  <span class="dif-kU">[5]</span></div><div>    <span class="dif-vU">5</span></div><div>- <span class="dif-kR">[6]</span></div><div>-   <span class="dif-vR">6</span></div><div>- <span class="dif-kR">[7]</span></div><div>-   <span class="dif-vR">7</span></div></div>',
    },
    'lists_LCS_removed_items_noU': {
        'result': '<div class="dif-body"><div>- <span class="dif-kR">[0]</span></div><div>-   <span class="dif-vR">0</span></div><div>- <span class="dif-kR">[1]</span></div><div>-   <span class="dif-vR">1</span></div><div>- <span class="dif-kR">[4]</span></div><div>-   <span class="dif-vR">4</span></div><div>- <span class="dif-kR">[6]</span></div><div>-   <span class="dif-vR">6</span></div><div>- <span class="dif-kR">[7]</span></div><div>-   <span class="dif-vR">7</span></div></div>',
    },
    'lists_with_one_different_item': {
        'result': '<div class="dif-body"><div>  <span class="dif-kO">[0]</span></div><div>-   <span class="dif-vO">0</span></div><div>+   <span class="dif-vN">1</span></div></div>',
    },
    'lists_with_one_different_item_noN': {
        'result': '<div class="dif-body"><div>  <span class="dif-kO">[0]</span></div><div>-   <span class="dif-vO">0</span></div></div>',
    },
    'lists_with_one_different_item_noO': {
        'result': '<div class="dif-body"><div>  <span class="dif-kN">[0]</span></div><div>+   <span class="dif-vN">1</span></div></div>',
    },
    'mixed_specific_structures': {
        'result': '<div class="dif-body"><div>  <span class="dif-kO">(0)</span></div><div>-   <span class="dif-vO">()</span></div><div>+   <span class="dif-vN">frozenset()</span></div><div>  <span class="dif-kD">(1)</span></div><div>#   <span class="dif-kE">&lt;set&gt;</span></div><div>+   <span class="dif-vA">True</span></div></div>',
    },
    'nested_hashes': {
        'result': '<div class="dif-body"><div>+ <span class="dif-kA">{&#x27;four&#x27;}</span></div><div>+   <span class="dif-vA">4</span></div><div>  <span class="dif-kU">{&#x27;one&#x27;}</span></div><div>    <span class="dif-vU">1</span></div><div>- <span class="dif-kR">{&#x27;three&#x27;}</span></div><div>-   <span class="dif-vR">3</span></div><div>  <span class="dif-kD">{&#x27;two&#x27;}</span></div><div>    <span class="dif-kO">{&#x27;nine&#x27;}</span></div><div>-     <span class="dif-vO">9</span></div><div>+     <span class="dif-vN">8</span></div><div>    <span class="dif-kU">{&#x27;ten&#x27;}</span></div><div>      <span class="dif-vU">10</span></div></div>',
    },
    'nested_hashes_noU': {
        'result': '<div class="dif-body"><div>+ <span class="dif-kA">{&#x27;four&#x27;}</span></div><div>+   <span class="dif-vA">4</span></div><div>- <span class="dif-kR">{&#x27;three&#x27;}</span></div><div>-   <span class="dif-vR">3</span></div><div>  <span class="dif-kD">{&#x27;two&#x27;}</span></div><div>    <span class="dif-kO">{&#x27;nine&#x27;}</span></div><div>-     <span class="dif-vO">9</span></div><div>+     <span class="dif-vN">8</span></div></div>',
    },
    'nested_hashes_with_one_different_value': {
        'result': '<div class="dif-body"><div>  <span class="dif-kD">{&#x27;one&#x27;}</span></div><div>    <span class="dif-kD">{&#x27;two&#x27;}</span></div><div>      <span class="dif-kO">{&#x27;three&#x27;}</span></div><div>-       <span class="dif-vO">3</span></div><div>+       <span class="dif-vN">4</span></div></div>',
    },
    'nested_hashes_with_one_equal_value': {
        'result': '<div class="dif-body"><div>  <span class="dif-vU">{&#x27;one&#x27;: {&#x27;two&#x27;: {&#x27;three&#x27;: 3}}}</span></div></div>',
    },
    'nested_hashes_with_one_equal_value_noU': {
        'result': '<div class="dif-body"></div>',
    },
    'nested_lists': {
        'result': '<div class="dif-body"><div>  <span class="dif-kU">[0]</span></div><div>    <span class="dif-vU">0</span></div><div>  <span class="dif-kU">[1]</span></div><div>    <span class="dif-vU">[[100]]</span></div><div>  <span class="dif-kD">[2]</span></div><div>    <span class="dif-kU">[0]</span></div><div>      <span class="dif-vU">20</span></div><div>    <span class="dif-kO">[1]</span></div><div>-     <span class="dif-vO">&#x27;30&#x27;</span></div><div>+     <span class="dif-vN">&#x27;31&#x27;</span></div><div>  <span class="dif-kO">[3]</span></div><div>-   <span class="dif-vO">4</span></div><div>+   <span class="dif-vN">5</span></div></div>',
    },
    'nested_lists_noU': {
        'result': '<div class="dif-body"><div>  <span class="dif-kD">[2]</span></div><div>    <span class="dif-kO">[1]</span></div><div>-     <span class="dif-vO">&#x27;30&#x27;</span></div><div>+     <span class="dif-vN">&#x27;31&#x27;</span></div><div>  <span class="dif-kO">[3]</span></div><div>-   <span class="dif-vO">4</span></div><div>+   <span class="dif-vN">5</span></div></div>',
    },
    'nested_lists_with_one_different_item': {
        'result': '<div class="dif-body"><div>  <span class="dif-kD">[0]</span></div><div>    <span class="dif-kO">[0]</span></div><div>-     <span class="dif-vO">0</span></div><div>+     <span class="dif-vN">1</span></div></div>',
    },
    'nested_lists_with_one_equal_item': {
        'result': '<div class="dif-body"><div>  <span class="dif-vU">[[0]]</span></div></div>',
    },
    'nested_lists_with_one_equal_item_noU': {
        'result': '<div class="dif-body"></div>',
    },
    'nested_mixed_structures': {
        'result': '<div class="dif-body"><div>  <span class="dif-kD">{&#x27;one&#x27;}</span></div><div>    <span class="dif-kD">[0]</span></div><div>      <span class="dif-kD">{&#x27;two&#x27;}</span></div><div>        <span class="dif-kD">{&#x27;three&#x27;}</span></div><div>          <span class="dif-kU">[0]</span></div><div>            <span class="dif-vU">7</span></div><div>          <span class="dif-kO">[1]</span></div><div>-           <span class="dif-vO">4</span></div><div>+           <span class="dif-vN">3</span></div><div>    <span class="dif-kU">[1]</span></div><div>      <span class="dif-vU">8</span></div></div>',
    },
    'nested_mixed_structures_noOU': {
        'result': '<div class="dif-body"><div>  <span class="dif-kD">{&#x27;one&#x27;}</span></div><div>    <span class="dif-kD">[0]</span></div><div>      <span class="dif-kD">{&#x27;two&#x27;}</span></div><div>        <span class="dif-kD">{&#x27;three&#x27;}</span></div><div>          <span class="dif-kN">[1]</span></div><div>+           <span class="dif-vN">3</span></div></div>',
    },
    'one_item_changed_in_the_middle_of_list': {
        'result': '<div class="dif-body"><div>  <span class="dif-kU">[0]</span></div><div>    <span class="dif-vU">0</span></div><div>  <span class="dif-kO">[1]</span></div><div>-   <span class="dif-vO">1</span></div><div>+   <span class="dif-vN">9</span></div><div>  <span class="dif-kU">[2]</span></div><div>    <span class="dif-vU">2</span></div></div>',
    },
    'one_item_changed_in_the_middle_of_list_noN': {
        'result': '<div class="dif-body"><div>  <span class="dif-kU">[0]</span></div><div>    <span class="dif-vU">0</span></div><div>  <span class="dif-kO">[1]</span></div><div>-   <span class="dif-vO">1</span></div><div>  <span class="dif-kU">[2]</span></div><div>    <span class="dif-vU">2</span></div></div>',
    },
    'one_item_changed_in_the_middle_of_list_noNO': {
        'result': '<div class="dif-body"><div>  <span class="dif-kU">[0]</span></div><div>    <span class="dif-vU">0</span></div><div>  <span class="dif-kU">[2]</span></div><div>    <span class="dif-vU">2</span></div></div>',
    },
    'one_item_changed_in_the_middle_of_list_noO': {
        'result': '<div class="dif-body"><div>  <span class="dif-kU">[0]</span></div><div>    <span class="dif-vU">0</span></div><div>  <span class="dif-kN">[1]</span></div><div>+   <span class="dif-vN">9</span></div><div>  <span class="dif-kU">[2]</span></div><div>    <span class="dif-vU">2</span></div></div>',
    },
    'one_item_changed_in_the_middle_of_list_noU': {
        'result': '<div class="dif-body"><div>  <span class="dif-kO">[1]</span></div><div>-   <span class="dif-vO">1</span></div><div>+   <span class="dif-vN">9</span></div></div>',
    },
    'one_item_inserted_in_the_middle_of_list': {
        'result': '<div class="dif-body"><div>  <span class="dif-kU">[0]</span></div><div>    <span class="dif-vU">0</span></div><div>+ <span class="dif-kA">[1]</span></div><div>+   <span class="dif-vA">1</span></div><div>  <span class="dif-kU">[2]</span></div><div>    <span class="dif-vU">2</span></div></div>',
    },
    'one_item_inserted_in_the_middle_of_list_noA': {
        'result': '<div class="dif-body"><div>  <span class="dif-kU">[0]</span></div><div>    <span class="dif-vU">0</span></div><div>  <span class="dif-kU">[1]</span></div><div>    <span class="dif-vU">2</span></div></div>',
    },
    'one_item_inserted_in_the_middle_of_list_noU': {
        'result': '<div class="dif-body"><div>+ <span class="dif-kA">[1]</span></div><div>+   <span class="dif-vA">1</span></div></div>',
    },
    'one_item_popped_from_list': {
        'result': '<div class="dif-body"><div>  <span class="dif-kU">[0]</span></div><div>    <span class="dif-vU">0</span></div><div>- <span class="dif-kR">[1]</span></div><div>-   <span class="dif-vR">1</span></div></div>',
    },
    'one_item_popped_from_list_noU': {
        'result': '<div class="dif-body"><div>- <span class="dif-kR">[1]</span></div><div>-   <span class="dif-vR">1</span></div></div>',
    },
    'one_item_pushed_to_list': {
        'result': '<div class="dif-body"><div>  <span class="dif-kU">[0]</span></div><div>    <span class="dif-vU">0</span></div><div>+ <span class="dif-kA">[1]</span></div><div>+   <span class="dif-vA">1</span></div></div>',
    },
    'one_item_pushed_to_list_noU': {
        'result': '<div class="dif-body"><div>+ <span class="dif-kA">[1]</span></div><div>+   <span class="dif-vA">1</span></div></div>',
    },
    'one_item_removed_from_the_middle_of_list': {
        'result': '<div class="dif-body"><div>  <span class="dif-kU">[0]</span></div><div>    <span class="dif-vU">0</span></div><div>- <span class="dif-kR">[1]</span></div><div>-   <span class="dif-vR">1</span></div><div>  <span class="dif-kU">[2]</span></div><div>    <span class="dif-vU">2</span></div></div>',
    },
    'one_item_removed_from_the_middle_of_list_noR': {
        'result': '<div class="dif-body"><div>  <span class="dif-kU">[0]</span></div><div>    <span class="dif-vU">0</span></div><div>  <span class="dif-kU">[2]</span></div><div>    <span class="dif-vU">2</span></div></div>',
    },
    'one_item_removed_from_the_middle_of_list_noU': {
        'result': '<div class="dif-body"><div>- <span class="dif-kR">[1]</span></div><div>-   <span class="dif-vR">1</span></div></div>',
    },
    'one_item_shifted_from_list': {
        'result': '<div class="dif-body"><div>- <span class="dif-kR">[0]</span></div><div>-   <span class="dif-vR">0</span></div><div>  <span class="dif-kU">[1]</span></div><div>    <span class="dif-vU">1</span></div></div>',
    },
    'one_item_shifted_from_list_noU': {
        'result': '<div class="dif-body"><div>- <span class="dif-kR">[0]</span></div><div>-   <span class="dif-vR">0</span></div></div>',
    },
    'one_item_unshifted_to_list': {
        'result': '<div class="dif-body"><div>+ <span class="dif-kA">[0]</span></div><div>+   <span class="dif-vA">0</span></div><div>  <span class="dif-kU">[1]</span></div><div>    <span class="dif-vU">1</span></div></div>',
    },
    'one_item_unshifted_to_list_noU': {
        'result': '<div class="dif-body"><div>+ <span class="dif-kA">[0]</span></div><div>+   <span class="dif-vA">0</span></div></div>',
    },
    'one_key_added_to_subhash': {
        'result': '<div class="dif-body"><div>  <span class="dif-kD">{&#x27;one&#x27;}</span></div><div>+   <span class="dif-kA">{&#x27;three&#x27;}</span></div><div>+     <span class="dif-vA">3</span></div><div>    <span class="dif-kU">{&#x27;two&#x27;}</span></div><div>      <span class="dif-vU">2</span></div></div>',
    },
    'one_key_added_to_subhash_noU': {
        'result': '<div class="dif-body"><div>  <span class="dif-kD">{&#x27;one&#x27;}</span></div><div>+   <span class="dif-kA">{&#x27;three&#x27;}</span></div><div>+     <span class="dif-vA">3</span></div></div>',
    },
    'one_key_removed_from_subhash': {
        'result': '<div class="dif-body"><div>  <span class="dif-kD">{&#x27;one&#x27;}</span></div><div>-   <span class="dif-kR">{&#x27;three&#x27;}</span></div><div>-     <span class="dif-vR">3</span></div><div>    <span class="dif-kU">{&#x27;two&#x27;}</span></div><div>      <span class="dif-vU">2</span></div></div>',
    },
    'one_key_removed_from_subhash_noU': {
        'result': '<div class="dif-body"><div>  <span class="dif-kD">{&#x27;one&#x27;}</span></div><div>-   <span class="dif-kR">{&#x27;three&#x27;}</span></div><div>-     <span class="dif-vR">3</span></div></div>',
    },
    'quote_symbols': {
        'result': '<div class="dif-body"><div>  <span class="dif-kO">{&#x27;&quot;double&quot;&#x27;}</span></div><div>-   <span class="dif-vO">&#x27;&quot;&quot;&#x27;</span></div><div>+   <span class="dif-vN">&#x27;&quot;&#x27;</span></div><div>  <span class="dif-kO">{&quot;&#x27;single&#x27;&quot;}</span></div><div>-   <span class="dif-vO">&quot;&#x27;&#x27;&quot;</span></div><div>+   <span class="dif-vN">&quot;&#x27;&quot;</span></div><div>  <span class="dif-kO">{&#x27;`backticks`&#x27;}</span></div><div>-   <span class="dif-vO">&#x27;``&#x27;</span></div><div>+   <span class="dif-vN">&#x27;`&#x27;</span></div></div>',
    },
    'redefined_depth': {
        'result': '<div class="dif-body"><div>-       <span class="dif-vO">0</span></div><div>+       <span class="dif-vN">1</span></div></div>',
    },
    'set_extended': {
        'result': '<div class="dif-body"><div># <span class="dif-kE">&lt;set&gt;</span></div><div>  <span class="dif-vU">1</span></div><div>+ <span class="dif-vA">2</span></div></div>',
    },
    'sets_empty_diff': {
        'result': '<div class="dif-body"></div>',
    },
    'sets_lcs': {
        'result': '<div class="dif-body"><div># <span class="dif-kE">&lt;set&gt;</span></div><div>- <span class="dif-vR">1</span></div><div>  <span class="dif-vU">2</span></div><div>+ <span class="dif-vA">3</span></div></div>',
    },
    'sets_lcs_noAR': {
        'result': '<div class="dif-body"><div># <span class="dif-kE">&lt;set&gt;</span></div><div>  <span class="dif-vU">2</span></div></div>',
    },
    'sets_lcs_noU': {
        'result': '<div class="dif-body"><div># <span class="dif-kE">&lt;set&gt;</span></div><div>- <span class="dif-vR">1</span></div><div>+ <span class="dif-vA">3</span></div></div>',
    },
    'sets_lcs_trimR': {
        'result': '<div class="dif-body"><div># <span class="dif-kE">&lt;set&gt;</span></div><div>- <span class="dif-vR">1</span></div><div>  <span class="dif-vU">2</span></div><div>+ <span class="dif-vA">3</span></div></div>',
    },
    'simple_strings_in_text_mode': {
        'result': '<div class="dif-body"><div>- <span class="dif-vO">&#x27;bar&#x27;</span></div><div>+ <span class="dif-vN">&#x27;baz&#x27;</span></div></div>',
    },
    'str_vs_bytes': {
        'result': '<div class="dif-body"><div>- <span class="dif-vO">&#x27;a&#x27;</span></div><div>+ <span class="dif-vN">b&#x27;a&#x27;</span></div></div>',
    },
    'subhash_emptied': {
        'result': '<div class="dif-body"><div>  <span class="dif-kD">{&#x27;one&#x27;}</span></div><div>-   <span class="dif-kR">{&#x27;two&#x27;}</span></div><div>-     <span class="dif-vR">2</span></div></div>',
    },
    'subhash_emptied_noR': {
        'result': '<div class="dif-body"></div>',
    },
    'subhash_filled': {
        'result': '<div class="dif-body"><div>  <span class="dif-kD">{&#x27;one&#x27;}</span></div><div>+   <span class="dif-kA">{&#x27;two&#x27;}</span></div><div>+     <span class="dif-vA">2</span></div></div>',
    },
    'subhash_filled_noA': {
        'result': '<div class="dif-body"></div>',
    },
    'sublist_emptied': {
        'result': '<div class="dif-body"><div>  <span class="dif-kD">[0]</span></div><div>-   <span class="dif-kR">[0]</span></div><div>-     <span class="dif-vR">0</span></div></div>',
    },
    'sublist_emptied_noR': {
        'result': '<div class="dif-body"></div>',
    },
    'sublist_filled': {
        'result': '<div class="dif-body"><div>  <span class="dif-kD">[0]</span></div><div>+   <span class="dif-kA">[0]</span></div><div>+     <span class="dif-vA">0</span></div></div>',
    },
    'sublist_filled_noA': {
        'result': '<div class="dif-body"></div>',
    },
    'text_diff_disabled': {
        'result': '<div class="dif-body"><div>- <span class="dif-vO">&#x27;A\\nB&#x27;</span></div><div>+ <span class="dif-vN">&#x27;B\\nC&#x27;</span></div></div>',
    },
    'text_equal': {
        'result': '<div class="dif-body"></div>',
    },
    'text_lcs': {
        'result': '<div class="dif-body"><div># <span class="dif-kE">&lt;str&gt;</span></div><div>  <span class="dif-kX0-0">@@ -1,3 +1,2 @@</span></div><div>  <span class="dif-vU">A</span></div><div>- <span class="dif-vR">B</span></div><div>  <span class="dif-vU">C</span></div></div>',
    },
    'text_line_added': {
        'result': '<div class="dif-body"><div># <span class="dif-kE">&lt;str&gt;</span></div><div>  <span class="dif-kX0-0">@@ -1,2 +1,3 @@</span></div><div>+ <span class="dif-vA">A</span></div><div>  <span class="dif-vU">B</span></div><div>  <span class="dif-vU">C</span></div></div>',
    },
    'text_line_changed': {
        'result': '<div class="dif-body"><div># <span class="dif-kE">&lt;str&gt;</span></div><div>  <span class="dif-kX0-0">@@ -1,3 +1,3 @@</span></div><div>  <span class="dif-vU">A</span></div><div>- <span class="dif-vR">B</span></div><div>+ <span class="dif-vA">b</span></div><div>  <span class="dif-vU">C</span></div></div>',
    },
    'text_line_changed_ctx_0': {
        'result': '<div class="dif-body"><div># <span class="dif-kE">&lt;str&gt;</span></div><div>  <span class="dif-kX0-0">@@ -2 +2 @@</span></div><div>- <span class="dif-vR">B</span></div><div>+ <span class="dif-vA">b</span></div></div>',
    },
    'text_line_removed': {
        'result': '<div class="dif-body"><div># <span class="dif-kE">&lt;str&gt;</span></div><div>  <span class="dif-kX0-0">@@ -1,3 +1,2 @@</span></div><div>  <span class="dif-vU">A</span></div><div>- <span class="dif-vR">B</span></div><div>  <span class="dif-vU">C</span></div></div>',
    },
    'text_multiple_hunks': {
        'result': '<div class="dif-body"><div># <span class="dif-kE">&lt;str&gt;</span></div><div>  <span class="dif-kX0-0">@@ -1 +1 @@</span></div><div>+ <span class="dif-vA">A</span></div><div>  <span class="dif-kX0-0">@@ -3 +4 @@</span></div><div>- <span class="dif-vR">C</span></div></div>',
    },
    'text_trailing_newlines': {
        'result': '<div class="dif-body"><div># <span class="dif-kE">&lt;str&gt;</span></div><div>  <span class="dif-kX0-0">@@ -1,3 +1,3 @@</span></div><div>  <span class="dif-vU">A</span></div><div>- <span class="dif-vR">B</span></div><div>+ <span class="dif-vA">b</span></div><div>  <span class="dif-vU"></span></div></div>',
    },
    'text_vs_empty_string': {
        'result': '<div class="dif-body"><div># <span class="dif-kE">&lt;str&gt;</span></div><div>  <span class="dif-kX0-0">@@ -1,2 +1 @@</span></div><div>- <span class="dif-vR">A</span></div><div>- <span class="dif-vR">B</span></div><div>+ <span class="dif-vA"></span></div></div>',
    },
    'tuple_extended': {
        'result': '<div class="dif-body"><div>  <span class="dif-kU">(0)</span></div><div>    <span class="dif-vU">1</span></div><div>+ <span class="dif-kA">(1)</span></div><div>+   <span class="dif-vA">2</span></div></div>',
    },
    'tuples_lcs': {
        'result': '<div class="dif-body"><div>+ <span class="dif-kA">(0)</span></div><div>+   <span class="dif-vA">0</span></div><div>  <span class="dif-kU">(1)</span></div><div>    <span class="dif-vU">1</span></div><div>  <span class="dif-kU">(2)</span></div><div>    <span class="dif-vU">2</span></div><div>  <span class="dif-kO">(3)</span></div><div>-   <span class="dif-vO">4</span></div><div>+   <span class="dif-vN">3</span></div><div>- <span class="dif-kR">(4)</span></div><div>-   <span class="dif-vR">5</span></div></div>',
    },
    'tuples_lcs_noOU': {
        'result': '<div class="dif-body"><div>+ <span class="dif-kA">(0)</span></div><div>+   <span class="dif-vA">0</span></div><div>  <span class="dif-kN">(2)</span></div><div>+   <span class="dif-vN">3</span></div><div>- <span class="dif-kR">(3)</span></div><div>-   <span class="dif-vR">5</span></div></div>',
    },
    'type_headers_disabled': {
        'result': '<div class="dif-body"><div>  <span class="dif-kX0-0">@@ -1,2 +1,2 @@</span></div><div>- <span class="dif-vR">two</span></div><div>+ <span class="dif-vA">2</span></div><div>  <span class="dif-vU">lines</span></div></div>',
    },
    'undef_vs_0': {
        'result': '<div class="dif-body"><div>- <span class="dif-vO">None</span></div><div>+ <span class="dif-vN">0</span></div></div>',
    },
    'undef_vs_empty_hash': {
        'result': '<div class="dif-body"><div>- <span class="dif-vO">None</span></div><div>+ <span class="dif-vN">{}</span></div></div>',
    },
    'undef_vs_empty_hash_noNO': {
        'result': '<div class="dif-body"></div>',
    },
    'undef_vs_empty_list': {
        'result': '<div class="dif-body"><div>- <span class="dif-vO">None</span></div><div>+ <span class="dif-vN">[]</span></div></div>',
    },
    'undef_vs_empty_string': {
        'result': '<div class="dif-body"><div>- <span class="dif-vO">None</span></div><div>+ <span class="dif-vN">&#x27;&#x27;</span></div></div>',
    },
    'undef_vs_negative_number': {
        'result': '<div class="dif-body"><div>- <span class="dif-vO">None</span></div><div>+ <span class="dif-vN">-1</span></div></div>',
    },
    'undef_vs_undef': {
        'result': '<div class="dif-body"><div>  <span class="dif-vU">None</span></div></div>',
    },
    'wrapping_text': {
        'result': 'Header\n<div class="dif-body"><div>- <span class="dif-vO">0</span></div><div>+ <span class="dif-vN">1</span></div></div>Footer\n',
    },
}


if __name__ == '__main__':
    names = sys.argv[1:] if len(sys.argv) > 1 else sorted(RESULTS.keys())
    headers = len(names) > 1

    for name in names:
        if headers:
            print('========== ' + name + ' ==========')
        print(RESULTS[name].get('result', None), end='')
